local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\5\137","\203\43\167\55\126"),function(v42) if (v9(v42,2)==81) then local v102=0;while true do if (v102==0) then v30=v8(v11(v42,1,1));return "";end end else local v103=v10(v8(v42,16));if v30 then local v114=v13(v103,v30);v30=nil;return v114;else return v103;end end end);local function v31(v43,v44,v45) if v45 then local v104=0;local v105;while true do if (v104==0) then v105=(v43/(2^(v44-1)))%(2^(((v45-(2 -1)) -(v44-1)) + 1)) ;return v105-(v105%1) ;end end else local v106=0;local v107;while true do if (v106==0) then v107=2^(v44-1) ;return (((v43%(v107 + v107))>=v107) and (2 -1)) or (0 -0) ;end end end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * 256) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end end end local function v35() local v56=v34();local v57=v34();local v58=1;local v59=(v31(v57,2 -1 ,20) * (2^(651 -(555 + 64)))) + v56 ;local v60=v31(v57,21,31);local v61=((v31(v57,32)==1) and  -1) or (932 -(857 + 74)) ;if (v60==0) then if (v59==(568 -(367 + 201))) then return v61 * 0 ;else v60=1;v58=0;end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/((929 -(214 + 713))^52))) ;end local function v36(v62) local v63;if  not v62 then v62=v34();if (v62==0) then return "";end end v63=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;local v64={};for v78=1, #v63 do v64[v78]=v10(v9(v11(v63,v78,v78)));end return v14(v64);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v80=1,v69 do local v81=0;local v82;local v83;while true do if (0==v81) then v82=v32();v83=nil;v81=1;end if (v81==1) then if (v82==1) then v83=v32()~=0 ;elseif (v82==2) then v83=v35();elseif (v82==3) then v83=v36();end v70[v80]=v83;break;end end end v68[1 + 2 ]=v32();for v84=1,v34() do local v85=v32();if (v31(v85,1,878 -(282 + 595) )==0) then local v110=0;local v111;local v112;local v113;while true do if (v110==1) then v113={v33(),v33(),nil,nil};if (v111==0) then local v123=0;while true do if (v123==0) then v113[3]=v33();v113[4]=v33();break;end end elseif (v111==1) then v113[1640 -(1523 + 114) ]=v34();elseif (v111==2) then v113[3]=v34() -((2 + 0)^16) ;elseif (v111==3) then local v134=0;while true do if (v134==0) then v113[3]=v34() -(2^16) ;v113[4]=v33();break;end end end v110=2;end if (v110==2) then if (v31(v112,1,1)==1) then v113[2]=v70[v113[2]];end if (v31(v112,2,2)==1) then v113[3]=v70[v113[3]];end v110=3;end if (0==v110) then v111=v31(v85,2,3);v112=v31(v85,4,6);v110=1;end if (v110==3) then if (v31(v112,3,3)==1) then v113[4]=v70[v113[5 -1 ]];end v65[v84]=v113;break;end end end end for v86=1066 -(68 + 997) ,v34() do v66[v86-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v88=v75;local v89=v76;local v90=v77;local v91=v38;local v92=1;local v93= -1;local v94={};local v95={...};local v96=v20("#",...) -1 ;local v97={};local v98={};for v108=0,v96 do if (v108>=v90) then v94[v108-v90 ]=v95[v108 + 1 ];else v98[v108]=v95[v108 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do local v109=0;while true do if (v109==1) then if (v101<=48) then if (v101<=23) then if (v101<=11) then if (v101<=5) then if (v101<=2) then if (v101<=0) then local v137=v100[2];do return v98[v137](v21(v98,v137 + 1 ,v93));end elseif (v101>1) then if (v98[v100[1272 -(226 + 1044) ]]~=v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end else local v199=0;local v200;while true do if (v199==0) then v200=v100[2];v98[v200]=v98[v200](v21(v98,v200 + 1 ,v93));break;end end end elseif (v101<=3) then v98[v100[2]]= #v98[v100[3]];elseif (v101==4) then local v201=0;local v202;local v203;local v204;while true do if (v201==1) then v204=v98[v202] + v203 ;v98[v202]=v204;v201=2;end if (v201==2) then if (v203>0) then if (v204<=v98[v202 + 1 ]) then v92=v100[3];v98[v202 + 3 ]=v204;end elseif (v204>=v98[v202 + (4 -3) ]) then local v466=0;while true do if (v466==0) then v92=v100[3];v98[v202 + 3 ]=v204;break;end end end break;end if (v201==0) then v202=v100[2];v203=v98[v202 + 2 ];v201=1;end end else v98[v100[2]]=v100[3] + v98[v100[4]] ;end elseif (v101<=8) then if (v101<=6) then local v139=v100[2];v98[v139]=v98[v139](v21(v98,v139 + 1 ,v93));elseif (v101>7) then v98[v100[119 -(32 + 85) ]]={};else local v207=0;local v208;local v209;while true do if (0==v207) then v208=v100[3];v209=v98[v208];v207=1;end if (v207==1) then for v418=v208 + 1 + 0 ,v100[4] do v209=v209   .. v98[v418] ;end v98[v100[2]]=v209;break;end end end elseif (v101<=9) then for v194=v100[2],v100[3] do v98[v194]=nil;end elseif (v101>10) then v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;else local v211=0;local v212;local v213;while true do if (v211==0) then v212=v100[2];v213=v98[v100[1 + 2 ]];v211=1;end if (1==v211) then v98[v212 + 1 ]=v213;v98[v212]=v213[v100[4]];break;end end end elseif (v101<=17) then if (v101<=14) then if (v101<=(969 -(892 + 65))) then local v141=0;local v142;local v143;local v144;local v145;while true do if (2==v141) then for v360=v142,v93 do v145=v145 + (2 -1) ;v98[v360]=v143[v145];end break;end if (0==v141) then v142=v100[2];v143,v144=v91(v98[v142](v21(v98,v142 + 1 ,v100[3])));v141=1;end if (v141==1) then v93=(v144 + v142) -1 ;v145=0;v141=2;end end elseif (v101==(23 -10)) then for v334=v100[2],v100[3] do v98[v334]=nil;end else local v214=0;local v215;while true do if (v214==0) then v215=v100[3 -1 ];do return v21(v98,v215,v93);end break;end end end elseif (v101<=15) then local v146=0;local v147;while true do if (v146==0) then v147=v100[2];v98[v147]=v98[v147](v21(v98,v147 + 1 ,v100[3]));break;end end elseif (v101>16) then local v216=v100[2];v98[v216](v98[v216 + 1 ]);else local v217=0;local v218;local v219;while true do if (v217==1) then for v419=v218 + 1 ,v93 do v15(v219,v98[v419]);end break;end if (0==v217) then v218=v100[2];v219=v98[v218];v217=1;end end end elseif (v101<=20) then if (v101<=(368 -(87 + 263))) then v98[v100[2]]=v100[183 -(67 + 113) ];elseif (v101==19) then local v220=0;local v221;while true do if (0==v220) then v221=v100[2 + 0 ];v98[v221]=v98[v221](v98[v221 + 1 ]);break;end end else v98[v100[2]]();end elseif (v101<=21) then v98[v100[2]]=v73[v100[3]];elseif (v101>22) then local v222=v100[2];v98[v222](v21(v98,v222 + 1 ,v93));else local v223=v100[2];local v224,v225=v91(v98[v223](v98[v223 + 1 ]));v93=(v225 + v223) -1 ;local v226=0;for v338=v223,v93 do local v339=0;while true do if (v339==0) then v226=v226 + (2 -1) ;v98[v338]=v224[v226];break;end end end end elseif (v101<=35) then if (v101<=(22 + 7)) then if (v101<=26) then if (v101<=(95 -71)) then v98[v100[954 -(802 + 150) ]]();elseif (v101==25) then local v227=v100[2];v98[v227]=v98[v227]();else local v229=v100[2];local v230,v231=v91(v98[v229](v21(v98,v229 + 1 ,v93)));v93=(v231 + v229) -1 ;local v232=0;for v340=v229,v93 do local v341=0;while true do if (0==v341) then v232=v232 + 1 ;v98[v340]=v230[v232];break;end end end end elseif (v101<=(72 -45)) then v98[v100[2]]=v98[v100[3]] + v100[4] ;elseif (v101>28) then local v233=0;local v234;while true do if (v233==0) then v234=v100[2];do return v98[v234](v21(v98,v234 + 1 ,v93));end break;end end else local v235=0;local v236;while true do if (0==v235) then v236=v100[2];do return v21(v98,v236,v93);end break;end end end elseif (v101<=32) then if (v101<=30) then local v153=v100[3 -1 ];local v154=v100[4];local v155=v153 + 2 ;local v156={v98[v153](v98[v153 + 1 + 0 ],v98[v155])};for v196=998 -(915 + 82) ,v154 do v98[v155 + v196 ]=v156[v196];end local v157=v156[1];if v157 then v98[v155]=v157;v92=v100[3];else v92=v92 + 1 ;end elseif (v101==31) then local v239=v100[2];local v240=v98[v239 + 2 ];local v241=v98[v239] + v240 ;v98[v239]=v241;if (v240>0) then if (v241<=v98[v239 + 1 ]) then local v424=0;while true do if (v424==0) then v92=v100[3];v98[v239 + (8 -5) ]=v241;break;end end end elseif (v241>=v98[v239 + 1 ]) then local v425=0;while true do if (0==v425) then v92=v100[3];v98[v239 + 3 ]=v241;break;end end end else local v243=v100[2];local v244=v98[v243];for v342=v243 + 1 ,v100[3] do v15(v244,v98[v342]);end end elseif (v101<=33) then local v158=0;local v159;local v160;while true do if (v158==0) then v159=v100[2];v160=v98[v159];v158=1;end if (v158==1) then for v363=v159 + 1 ,v93 do v15(v160,v98[v363]);end break;end end elseif (v101==34) then local v245=v100[2 + 0 ];do return v98[v245](v21(v98,v245 + 1 ,v100[3]));end else v92=v100[3 -0 ];end elseif (v101<=41) then if (v101<=38) then if (v101<=36) then if (v98[v100[2]]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101==37) then do return;end else v74[v100[3]]=v98[v100[2]];end elseif (v101<=39) then local v161=0;local v162;while true do if (v161==0) then v162=v100[2];v98[v162]=v98[v162](v98[v162 + 1 ]);break;end end elseif (v101==40) then v98[v100[2]]=v100[3] + v98[v100[4]] ;else v98[v100[2]]=v98[v100[3]] + v100[4] ;end elseif (v101<=44) then if (v101<=42) then local v163=v100[1189 -(1069 + 118) ];local v164=v98[v100[3]];v98[v163 + (2 -1) ]=v164;v98[v163]=v164[v100[4]];elseif (v101>43) then v98[v100[2]][v100[3]]=v98[v100[8 -4 ]];else local v254=v100[2];v98[v254]=v98[v254]();end elseif (v101<=46) then if (v101==(8 + 37)) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v100[2]==v98[v100[4]]) then v92=v92 + (1 -0) ;else v92=v100[3];end elseif (v101>47) then v98[v100[2]][v98[v100[3]]]=v98[v100[4]];else v98[v100[2]]=v73[v100[3 + 0 ]];end elseif (v101<=73) then if (v101<=60) then if (v101<=54) then if (v101<=51) then if (v101<=49) then v98[v100[2]][v100[3]]=v100[4];elseif (v101>(841 -(368 + 423))) then v98[v100[2]]=v98[v100[3]];else local v262=v100[2];do return v98[v262](v21(v98,v262 + 1 ,v100[3]));end end elseif (v101<=(163 -111)) then local v170=0;local v171;local v172;local v173;while true do if (v170==1) then v173=v100[3];for v366=1,v173 do v172[v366]=v98[v171 + v366 ];end break;end if (v170==0) then v171=v100[2];v172=v98[v171];v170=1;end end elseif (v101==53) then local v263=v100[2];local v264,v265=v91(v98[v263](v21(v98,v263 + 1 ,v93)));v93=(v265 + v263) -1 ;local v266=0;for v350=v263,v93 do local v351=0;while true do if (v351==0) then v266=v266 + 1 ;v98[v350]=v264[v266];break;end end end else v98[v100[2]]=v98[v100[3]];end elseif (v101<=57) then if (v101<=(73 -(10 + 8))) then v98[v100[7 -5 ]]=v100[3];elseif (v101>56) then v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;else v98[v100[2]]={};end elseif (v101<=58) then if (v98[v100[2]]==v98[v100[4]]) then v92=v92 + (443 -(416 + 26)) ;else v92=v100[3];end elseif (v101==59) then v98[v100[2]]=v98[v100[3]][v100[4]];else v98[v100[2]]=v98[v100[3]][v98[v100[4]]];end elseif (v101<=66) then if (v101<=63) then if (v101<=61) then do return v98[v100[2]]();end elseif (v101>62) then if (v100[2]==v98[v100[12 -8 ]]) then v92=v92 + 1 ;else v92=v100[3];end else v74[v100[3]]=v98[v100[2]];end elseif (v101<=(28 + 36)) then v98[v100[3 -1 ]]=v98[v100[3]]%v100[442 -(145 + 293) ] ;elseif (v101==65) then local v278=v100[2];local v279=v100[434 -(44 + 386) ];local v280=v278 + (1488 -(998 + 488)) ;local v281={v98[v278](v98[v278 + 1 ],v98[v280])};for v352=1,v279 do v98[v280 + v352 ]=v281[v352];end local v282=v281[1];if v282 then v98[v280]=v282;v92=v100[1 + 2 ];else v92=v92 + 1 ;end else do return;end end elseif (v101<=69) then if (v101<=67) then v98[v100[2]][v98[v100[3]]]=v100[4];elseif (v101==68) then do return v98[v100[2]]();end else local v283=0;local v284;local v285;local v286;while true do if (v283==1) then v286=v98[v284 + 2 ];if (v286>0) then if (v285>v98[v284 + 1 ]) then v92=v100[3];else v98[v284 + 3 ]=v285;end elseif (v285<v98[v284 + 1 ]) then v92=v100[3];else v98[v284 + 3 ]=v285;end break;end if (v283==0) then v284=v100[2];v285=v98[v284];v283=1;end end end elseif (v101<=71) then if (v101>70) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[2]]=v74[v100[3 + 0 ]];end elseif (v101>72) then local v289=0;local v290;local v291;local v292;local v293;while true do if (v289==2) then for v428=v290,v93 do v293=v293 + 1 ;v98[v428]=v291[v293];end break;end if (v289==0) then v290=v100[2];v291,v292=v91(v98[v290](v98[v290 + 1 ]));v289=1;end if (v289==1) then v93=(v292 + v290) -1 ;v293=0;v289=2;end end else v92=v100[775 -(201 + 571) ];end elseif (v101<=85) then if (v101<=79) then if (v101<=76) then if (v101<=74) then v98[v100[2]][v100[3]]=v98[v100[4]];elseif (v101>75) then if (v98[v100[2]]~=v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v98[v100[2]]==v100[1142 -(116 + 1022) ]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=77) then v98[v100[2]]=v98[v100[3]][v100[4]];elseif (v101==(324 -246)) then local v295=v100[2];v98[v295](v98[v295 + 1 ]);else local v296=0;local v297;local v298;local v299;while true do if (v296==1) then v299={};v298=v18({},{[v7("\154\149\42\16\23\1\223","\49\197\202\67\126\115\100\167")]=function(v431,v432) local v433=0;local v434;while true do if (v433==0) then v434=v299[v432];return v434[1][v434[2]];end end end,[v7("\8\100\209\44\151\95\80\51\94\199","\62\87\59\191\73\224\54")]=function(v435,v436,v437) local v438=v299[v436];v438[1 + 0 ][v438[2]]=v437;end});v296=2;end if (v296==0) then v297=v89[v100[3]];v298=nil;v296=1;end if (v296==2) then for v440=3 -2 ,v100[4] do local v441=0;local v442;while true do if (1==v441) then if (v442[1]==(191 -137)) then v299[v440-1 ]={v98,v442[3]};else v299[v440-(860 -(814 + 45)) ]={v73,v442[3]};end v97[ #v97 + 1 ]=v299;break;end if (v441==0) then v92=v92 + 1 ;v442=v88[v92];v441=1;end end end v98[v100[4 -2 ]]=v40(v297,v298,v74);break;end end end elseif (v101<=82) then if (v101<=80) then v98[v100[2]]=v98[v100[3]][v98[v100[4]]];elseif (v101>81) then v98[v100[2]][v100[3]]=v100[4];else local v302=v100[2];local v303=v98[v302];local v304=v100[3];for v355=1,v304 do v303[v355]=v98[v302 + v355 ];end end elseif (v101<=83) then v98[v100[2]]=v74[v100[1 + 2 ]];elseif (v101==84) then local v305=0;local v306;local v307;while true do if (v305==0) then v306=v100[3];v307=v98[v306];v305=1;end if (v305==1) then for v443=v306 + 1 ,v100[4] do v307=v307   .. v98[v443] ;end v98[v100[2]]=v307;break;end end else local v308=0;local v309;while true do if (v308==0) then v309=v100[2];v98[v309](v21(v98,v309 + 1 ,v93));break;end end end elseif (v101<=91) then if (v101<=88) then if (v101<=86) then if (v98[v100[2]]==v100[4]) then v92=v92 + 1 + 0 ;else v92=v100[3];end elseif (v101==87) then v98[v100[2]]=v98[v100[3]]%v100[4] ;else local v312=0;local v313;while true do if (v312==0) then v313=v100[2];v98[v313]=v98[v313](v21(v98,v313 + 1 ,v100[3]));break;end end end elseif (v101<=89) then local v187=0;local v188;local v189;local v190;local v191;while true do if (v187==1) then v93=(v190 + v188) -1 ;v191=0;v187=2;end if (v187==0) then v188=v100[2];v189,v190=v91(v98[v188](v21(v98,v188 + 1 ,v100[3])));v187=1;end if (2==v187) then for v375=v188,v93 do local v376=0;while true do if (v376==0) then v191=v191 + 1 ;v98[v375]=v189[v191];break;end end end break;end end elseif (v101>90) then local v314=0;local v315;local v316;local v317;while true do if (v314==0) then v315=v100[2];v316=v98[v315];v314=1;end if (v314==1) then v317=v98[v315 + (887 -(261 + 624)) ];if (v317>0) then if (v316>v98[v315 + 1 ]) then v92=v100[3];else v98[v315 + 3 ]=v316;end elseif (v316<v98[v315 + 1 ]) then v92=v100[3];else v98[v315 + 3 ]=v316;end break;end end else local v318=0;local v319;local v320;local v321;while true do if (v318==0) then v319=v100[2];v320={v98[v319](v98[v319 + 1 ])};v318=1;end if (1==v318) then v321=0;for v444=v319,v100[4] do v321=v321 + 1 ;v98[v444]=v320[v321];end break;end end end elseif (v101<=94) then if (v101<=92) then v98[v100[2]][v98[v100[3]]]=v100[4];elseif (v101==93) then local v322=0;local v323;local v324;local v325;while true do if (0==v322) then v323=v100[2];v324={v98[v323](v98[v323 + 1 ])};v322=1;end if (v322==1) then v325=0;for v447=v323,v100[4] do v325=v325 + 1 ;v98[v447]=v324[v325];end break;end end elseif v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=96) then if (v101==95) then v98[v100[2]]= #v98[v100[3]];else v98[v100[2]][v98[v100[3]]]=v98[v100[4]];end elseif (v101>97) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else local v329=0;local v330;local v331;local v332;while true do if (v329==1) then v332={};v331=v18({},{[v7("\216\61\243\199\227\7\226","\169\135\98\154")]=function(v450,v451) local v452=0;local v453;while true do if (v452==0) then v453=v332[v451];return v453[1][v453[2]];end end end,[v7("\244\72\42\81\234\58\198\207\114\60","\168\171\23\68\52\157\83")]=function(v454,v455,v456) local v457=v332[v455];v457[1][v457[2]]=v456;end});v329=2;end if (v329==2) then for v459=1,v100[4] do local v460=0;local v461;while true do if (v460==1) then if (v461[1]==54) then v332[v459-1 ]={v98,v461[3]};else v332[v459-(1 -0) ]={v73,v461[3]};end v97[ #v97 + 1 ]=v332;break;end if (v460==0) then v92=v92 + 1 ;v461=v88[v92];v460=1;end end end v98[v100[1082 -(1020 + 60) ]]=v40(v330,v331,v74);break;end if (0==v329) then v330=v89[v100[3]];v331=nil;v329=1;end end end v92=v92 + 1 ;break;end if (v109==0) then v100=v88[v92];v101=v100[1];v109=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
